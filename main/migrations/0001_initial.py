# Generated by Django 5.2.3 on 2025-06-30 14:31

import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Attribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "sort_order",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Sort Order"
                    ),
                ),
                ("label", models.CharField(max_length=255, verbose_name="Label")),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                (
                    "title_uk",
                    models.CharField(max_length=255, null=True, verbose_name="Title"),
                ),
                (
                    "title_en",
                    models.CharField(max_length=255, null=True, verbose_name="Title"),
                ),
                (
                    "title_ru",
                    models.CharField(max_length=255, null=True, verbose_name="Title"),
                ),
                (
                    "help_text",
                    models.TextField(blank=True, null=True, verbose_name="Help Text"),
                ),
                (
                    "help_text_uk",
                    models.TextField(blank=True, null=True, verbose_name="Help Text"),
                ),
                (
                    "help_text_en",
                    models.TextField(blank=True, null=True, verbose_name="Help Text"),
                ),
                (
                    "help_text_ru",
                    models.TextField(blank=True, null=True, verbose_name="Help Text"),
                ),
                (
                    "value_type",
                    models.CharField(max_length=255, verbose_name="Value Type"),
                ),
                (
                    "unit_max",
                    models.FloatField(blank=True, null=True, verbose_name="Unit Max"),
                ),
                (
                    "unit_min",
                    models.FloatField(blank=True, null=True, verbose_name="Unit Min"),
                ),
                (
                    "is_capitalized",
                    models.BooleanField(default=False, verbose_name="Is Capitalized"),
                ),
            ],
            options={
                "verbose_name": "Attribute",
                "verbose_name_plural": "Attributes",
                "db_table": "attributes_attribute",
                "ordering": ["sort_order"],
            },
        ),
        migrations.CreateModel(
            name="Commission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Amount"
                    ),
                ),
            ],
            options={
                "verbose_name": "Commission",
                "verbose_name_plural": "Commissions",
                "db_table": "core_commision",
            },
        ),
        migrations.CreateModel(
            name="FeedParsingReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "Started"), (2, "Success"), (3, "Error")],
                        default=2,
                        verbose_name="Status",
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Started At"),
                ),
                (
                    "finished_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Finished At"
                    ),
                ),
                (
                    "total_products",
                    models.IntegerField(default=0, verbose_name="Total Products"),
                ),
                (
                    "products_added",
                    models.IntegerField(default=0, verbose_name="Products Added"),
                ),
                (
                    "products_updated",
                    models.IntegerField(default=0, verbose_name="Products Updated"),
                ),
                (
                    "products_failed",
                    models.IntegerField(default=0, verbose_name="Products Failed"),
                ),
                (
                    "products_unpublished",
                    models.IntegerField(default=0, verbose_name="Products Unpublished"),
                ),
                (
                    "download_error",
                    models.TextField(
                        blank=True, null=True, verbose_name="Download Error"
                    ),
                ),
                (
                    "parsing_error",
                    models.TextField(
                        blank=True, null=True, verbose_name="Parsing Error"
                    ),
                ),
            ],
            options={
                "verbose_name": "Feed Parsing Report",
                "verbose_name_plural": "Feed Parsing Reports",
                "db_table": "store_feedparsingreport",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="FeedSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "company",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Company"
                    ),
                ),
                ("xml_url", models.URLField(verbose_name="XML URL")),
                (
                    "frequency",
                    models.IntegerField(
                        default=3,
                        help_text="Feed update frequency in hours",
                        verbose_name="Update Frequency (hours)",
                    ),
                ),
                (
                    "last_update",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last Update"
                    ),
                ),
                (
                    "next_update",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Next Update"
                    ),
                ),
            ],
            options={
                "verbose_name": "Feed Source",
                "verbose_name_plural": "Feed Sources",
                "db_table": "store_feedsource",
            },
        ),
        migrations.CreateModel(
            name="Unit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "sort_order",
                    models.IntegerField(default=0, verbose_name="Sort Order"),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                (
                    "title_uk",
                    models.CharField(max_length=255, null=True, verbose_name="Title"),
                ),
                (
                    "title_en",
                    models.CharField(max_length=255, null=True, verbose_name="Title"),
                ),
                (
                    "title_ru",
                    models.CharField(max_length=255, null=True, verbose_name="Title"),
                ),
                ("label", models.CharField(max_length=255, verbose_name="Label")),
            ],
            options={
                "verbose_name": "Unit",
                "verbose_name_plural": "Units",
                "db_table": "attributes_unit",
                "ordering": ["sort_order"],
            },
        ),
        migrations.CreateModel(
            name="AttributeValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "sort_order",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Sort Order"
                    ),
                ),
                ("label", models.CharField(max_length=256, verbose_name="Label")),
                ("title", models.CharField(max_length=500, verbose_name="Title")),
                (
                    "title_uk",
                    models.CharField(max_length=500, null=True, verbose_name="Title"),
                ),
                (
                    "title_en",
                    models.CharField(max_length=500, null=True, verbose_name="Title"),
                ),
                (
                    "title_ru",
                    models.CharField(max_length=500, null=True, verbose_name="Title"),
                ),
                (
                    "value_boolean",
                    models.BooleanField(null=True, verbose_name="Boolean Value"),
                ),
                (
                    "value_float",
                    models.FloatField(null=True, verbose_name="Float Value"),
                ),
                (
                    "value_integer",
                    models.IntegerField(null=True, verbose_name="Integer Value"),
                ),
                ("value_text", models.TextField(null=True, verbose_name="Text Value")),
                (
                    "is_for_filtering",
                    models.BooleanField(default=False, verbose_name="Is For Filtering"),
                ),
                (
                    "attribute",
                    models.ForeignKey(
                        db_column="attribute_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="values",
                        to="main.attribute",
                        verbose_name="Attribute",
                    ),
                ),
            ],
            options={
                "verbose_name": "Attribute Value",
                "verbose_name_plural": "Attribute Values",
                "db_table": "attributes_attributevalue",
                "ordering": ["sort_order"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "label",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="Label"
                    ),
                ),
                (
                    "image_alt",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Image Alt"
                    ),
                ),
                (
                    "image_alt_uk",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Image Alt"
                    ),
                ),
                (
                    "image_alt_en",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Image Alt"
                    ),
                ),
                (
                    "image_alt_ru",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Image Alt"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "title_uk",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "title_en",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "title_ru",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "h1_title",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="H1 Title"
                    ),
                ),
                (
                    "h1_title_uk",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="H1 Title"
                    ),
                ),
                (
                    "h1_title_en",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="H1 Title"
                    ),
                ),
                (
                    "h1_title_ru",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="H1 Title"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_uk",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_ru",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "google_product_category",
                    models.TextField(
                        blank=True, null=True, verbose_name="Google Product Category"
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Is Featured"),
                ),
                (
                    "banner",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="categories/banners/",
                        verbose_name="Banner",
                    ),
                ),
                (
                    "banner_alt",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Banner Alt"
                    ),
                ),
                (
                    "banner_alt_uk",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Banner Alt"
                    ),
                ),
                (
                    "banner_alt_en",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Banner Alt"
                    ),
                ),
                (
                    "banner_alt_ru",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Banner Alt"
                    ),
                ),
                (
                    "icon_alt",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Icon Alt"
                    ),
                ),
                (
                    "icon_alt_uk",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Icon Alt"
                    ),
                ),
                (
                    "icon_alt_en",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Icon Alt"
                    ),
                ),
                (
                    "icon_alt_ru",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Icon Alt"
                    ),
                ),
                (
                    "can_add_products",
                    models.BooleanField(default=True, verbose_name="Can Add Products"),
                ),
                (
                    "has_active_products",
                    models.BooleanField(
                        default=False, verbose_name="Has Active Products"
                    ),
                ),
                (
                    "is_for_adult",
                    models.BooleanField(default=False, verbose_name="Is For Adult"),
                ),
                (
                    "keywords",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="Keywords",
                    ),
                ),
                (
                    "icon",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="categories/icons/",
                        verbose_name="Icon",
                    ),
                ),
                (
                    "img",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="categories/",
                        verbose_name="Image",
                    ),
                ),
                (
                    "keywords_lowercased",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="Keywords Lowercased",
                    ),
                ),
                (
                    "active_product_count",
                    models.IntegerField(default=0, verbose_name="Active Product Count"),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        db_column="parent_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="main.category",
                        verbose_name="Parent",
                    ),
                ),
                (
                    "commission",
                    models.ForeignKey(
                        blank=True,
                        db_column="commission_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="categories",
                        to="main.commission",
                        verbose_name="Commission",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "db_table": "store_category",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="CategoryAttributeConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("sort_order", models.IntegerField(verbose_name="Sort Order")),
                (
                    "is_grouping",
                    models.BooleanField(default=False, verbose_name="Is Grouping"),
                ),
                (
                    "is_blocking",
                    models.BooleanField(default=False, verbose_name="Is Blocking"),
                ),
                (
                    "is_comparison",
                    models.BooleanField(default=False, verbose_name="Is Comparison"),
                ),
                (
                    "is_required",
                    models.BooleanField(default=False, verbose_name="Is Required"),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, null=True, verbose_name="Metadata"),
                ),
                (
                    "private_metadata",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Private Metadata"
                    ),
                ),
                (
                    "create_widget_type",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        verbose_name="Create Widget Type",
                    ),
                ),
                (
                    "filter_widget_type",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        verbose_name="Filter Widget Type",
                    ),
                ),
                (
                    "create_widget_attributes",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Create Widget Attributes"
                    ),
                ),
                (
                    "is_filterable",
                    models.BooleanField(default=False, verbose_name="Is Filterable"),
                ),
                (
                    "is_show_variant_preview",
                    models.BooleanField(
                        default=False, verbose_name="Is Show Variant Preview"
                    ),
                ),
                (
                    "display_for_category_descendants",
                    models.BooleanField(
                        default=False, verbose_name="Display For Category Descendants"
                    ),
                ),
                (
                    "attribute",
                    models.ForeignKey(
                        db_column="attribute_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="category_attribute_configs",
                        to="main.attribute",
                        verbose_name="Attribute",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        db_column="category_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="category_attribute_configs",
                        to="main.category",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category Attribute Config",
                "verbose_name_plural": "Category Attribute Configs",
                "db_table": "store_categoryattributeconfig",
                "ordering": ["sort_order"],
            },
        ),
        migrations.CreateModel(
            name="FeedParsingReportItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("product_external_id", models.CharField(max_length=255)),
                ("success", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="main.feedparsingreport",
                    ),
                ),
            ],
            options={
                "verbose_name": "Feed Parsing Report Item",
                "verbose_name_plural": "Feed Parsing Report Items",
                "db_table": "store_feedparsingreportitem",
            },
        ),
        migrations.AddField(
            model_name="feedparsingreport",
            name="feed",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="parsing_reports",
                to="main.feedsource",
                verbose_name="Feed",
            ),
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "external_id",
                    models.CharField(max_length=255, verbose_name="External ID"),
                ),
                ("vendor", models.CharField(max_length=255, verbose_name="Vendor")),
                (
                    "article",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Article"
                    ),
                ),
                ("name", models.CharField(max_length=500, verbose_name="Name")),
                (
                    "name_uk",
                    models.CharField(max_length=500, null=True, verbose_name="Name"),
                ),
                (
                    "name_en",
                    models.CharField(max_length=500, null=True, verbose_name="Name"),
                ),
                (
                    "name_ru",
                    models.CharField(max_length=500, null=True, verbose_name="Name"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_uk",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_ru",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Price"
                    ),
                ),
                (
                    "old_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Old Price",
                    ),
                ),
                (
                    "promo_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Promo Price",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="UAH", max_length=3, verbose_name="Currency"
                    ),
                ),
                (
                    "stock_quantity",
                    models.IntegerField(default=0, verbose_name="Stock Quantity"),
                ),
                (
                    "available",
                    models.BooleanField(default=True, verbose_name="Available"),
                ),
                (
                    "url",
                    models.URLField(
                        blank=True, max_length=500, null=True, verbose_name="URL"
                    ),
                ),
                (
                    "views_count",
                    models.IntegerField(default=0, verbose_name="Views Count"),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "Draft"), (2, "Active"), (3, "Archived")],
                        default=1,
                        verbose_name="Status",
                    ),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Published At"
                    ),
                ),
                ("is_new", models.BooleanField(default=False, verbose_name="Is New")),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products",
                        to="main.category",
                        verbose_name="Category",
                    ),
                ),
                (
                    "feed_source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="main.feedsource",
                        verbose_name="Feed Source",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "db_table": "store_product",
            },
        ),
        migrations.CreateModel(
            name="ProductAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "raw_value",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="Raw Value"
                    ),
                ),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_attributes",
                        to="main.attribute",
                        verbose_name="Attribute",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_attributes",
                        to="main.product",
                        verbose_name="Product",
                    ),
                ),
                (
                    "value",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_attributes",
                        to="main.attributevalue",
                        verbose_name="Value",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Attribute",
                "verbose_name_plural": "Product Attributes",
                "db_table": "store_productattribute",
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "image",
                    models.ImageField(upload_to="products/", verbose_name="Image"),
                ),
                (
                    "position",
                    models.PositiveIntegerField(default=0, verbose_name="Position"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="main.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Image",
                "verbose_name_plural": "Product Images",
                "db_table": "store_productimage",
                "ordering": ["position"],
            },
        ),
        migrations.AddField(
            model_name="attribute",
            name="unit",
            field=models.ForeignKey(
                blank=True,
                db_column="unit_id",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="main.unit",
                verbose_name="Unit",
            ),
        ),
        migrations.AddIndex(
            model_name="attributevalue",
            index=models.Index(
                fields=["attribute_id", "is_for_filtering"],
                name="attr_value_filter_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="attributevalue",
            index=models.Index(
                fields=["sort_order"], name="attribute_value_sort_order_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attributevalue",
            index=models.Index(
                fields=["label"],
                name="attributevalue_label_idx",
                opclasses=["varchar_pattern_ops"],
            ),
        ),
        migrations.AddIndex(
            model_name="attributevalue",
            index=models.Index(fields=["title"], name="attributevalue_title_idx"),
        ),
        migrations.AddIndex(
            model_name="categoryattributeconfig",
            index=models.Index(
                fields=["attribute", "category"], name="category_attribute_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["parent_id", "is_active"], name="category_parent_active_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(fields=["title"], name="category_title_idx"),
        ),
        migrations.AddIndex(
            model_name="feedparsingreport",
            index=models.Index(
                fields=["feed_id", "created"], name="fpr_feed_created_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedparsingreport",
            index=models.Index(fields=["started_at"], name="fpr_started_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["status", "is_active"], name="product_status_active_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["price"], name="product_price_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["created"], name="product_created_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["name"], name="product_name_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["description"], name="product_description_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="product",
            unique_together={("feed_source", "external_id")},
        ),
        migrations.AddIndex(
            model_name="productattribute",
            index=models.Index(fields=["product_id"], name="prod_attr_product_idx"),
        ),
        migrations.AddIndex(
            model_name="productattribute",
            index=models.Index(fields=["attribute_id"], name="prod_attr_attribute_idx"),
        ),
        migrations.AddIndex(
            model_name="productattribute",
            index=models.Index(fields=["raw_value"], name="prod_attr_raw_value_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="productattribute",
            unique_together={("product", "attribute", "value")},
        ),
        migrations.AddIndex(
            model_name="attribute",
            index=models.Index(fields=["title"], name="attribute_title_idx"),
        ),
        migrations.AddIndex(
            model_name="attribute",
            index=models.Index(fields=["sort_order"], name="attribute_sort_order_idx"),
        ),
    ]
